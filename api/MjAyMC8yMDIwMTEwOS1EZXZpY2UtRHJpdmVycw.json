{"title":"Device Drivers","date":"2020-11-09T01:25:00.000Z","date_formatted":{"ll":"Nov 9, 2020","L":"11/09/2020","MM-DD":"11-09"},"link":"2020/20201109-Device-Drivers","comments":true,"tags":["Operating System"],"categories":["Linux","Operating System"],"updated":"2020-11-09T07:38:05.073Z","content":"<h1 id=\"device-drivers\">Device Drivers<a title=\"#device-drivers\" href=\"#device-drivers\"></a></h1>\n<p>Abstracting Devices – Modules and Interrupts</p>\n<h2 id=\"part.1-kernel-modules:-presentation\">Part.1 Kernel modules: presentation<a title=\"#part.1-kernel-modules:-presentation\" href=\"#part.1-kernel-modules:-presentation\"></a></h2>\n<p>Modules are pieces of kernel code that can be dynamically loaded and unloaded at runtime.</p>\n<h3 id=\"modules-benefits:\">Modules benefits:<a title=\"#modules-benefits:\" href=\"#modules-benefits:\"></a></h3>\n<p>· No reboot</p>\n<p>Saves a lot of time when developing/debugging</p>\n<p>· No need to compile the entire kernel</p>\n<p>· Saves memory and CPU time by running on-demand</p>\n<p>· No performance difference between module and built-in kernel code</p>\n<p>· Help identifying buggy code</p>\n<p>Ex: identifying a buggy driver compiled as a module by selectively running them.</p>\n<h2 id=\"part.2-writing-a-kernel-module\">Part.2 Writing a kernel module<a title=\"#part.2-writing-a-kernel-module\" href=\"#part.2-writing-a-kernel-module\"></a></h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Create a C file anywhere on the filesystem. (No need to be inside the kernel sources).  */</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;linux/module.h&gt; /* Needed by all modules */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;linux/kernel.h&gt; /* KERN_INFO */</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;linux/init.h&gt; /* init and exit macros */</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> answer initdata = <span class=\"number\">42</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> init <span class=\"title\">lkp_init</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span> </span>&#123;</span><br><span class=\"line\">  printk(KERN_INFO<span class=\"string\">&quot;Moduele loaded ...¥n&quot;</span>);</span><br><span class=\"line\">  printk(KERN_INFO<span class=\"string\">&quot;The answer is %d...¥n&quot;</span>, answer);</span><br><span class=\"line\">  <span class=\"comment\">/* Return 0 on success, something else on error */</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">staticvoid <span class=\"built_in\">exit</span> <span class=\"title\">lkp_exit</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span> </span>&#123;</span><br><span class=\"line\">  printk(KERN_INFO<span class=\"string\">&quot;Module exiting...¥n&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* `init. &amp; exit` functions launched at the load /unload time.  */</span></span><br><span class=\"line\">module_init(lkp_init);</span><br><span class=\"line\">module_exit(lkp_exit);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* `MODULE_* macros`:  General info about the module. */</span></span><br><span class=\"line\">MODULE_LICENCE(<span class=\"string\">&quot;GPL&quot;</span>);</span><br><span class=\"line\">MODULE_AUTHOR(<span class=\"string\">&quot;PierreOlivier&lt;polivier@vt.edu&gt;&quot;</span>);</span><br><span class=\"line\">MODULE_DESCRIPTION(<span class=\"string\">&quot;Sample kernel module&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h2 id=\"part.3-compiling-a-kernel-module\">Part.3 Compiling a kernel module<a title=\"#part.3-compiling-a-kernel-module\" href=\"#part.3-compiling-a-kernel-module\"></a></h2>\n<h2 id=\"part.4-launching-a-kernel-module\">Part.4 Launching a kernel module<a title=\"#part.4-launching-a-kernel-module\" href=\"#part.4-launching-a-kernel-module\"></a></h2>\n<h2 id=\"part.5-modules:-miscellaneous-information\">Part.5 Modules: miscellaneous information<a title=\"#part.5-modules:-miscellaneous-information\" href=\"#part.5-modules:-miscellaneous-information\"></a></h2>\n<h2 id=\"part.6-memory-allocation\">Part.6 Memory allocation<a title=\"#part.6-memory-allocation\" href=\"#part.6-memory-allocation\"></a></h2>\n","next":{"title":"Process Scheduling","link":"2020/20201026-Process-Scheduling"},"plink":"https://oreodu.github.io/2020/20201109-Device-Drivers/","toc":[{"id":"device-drivers","title":"Device Drivers","index":"1","children":[{"id":"part.1-kernel-modules:-presentation","title":"Part.1 Kernel modules: presentation","index":"1.1"},{"id":"part.2-writing-a-kernel-module","title":"Part.2 Writing a kernel module","index":"1.2"},{"id":"part.3-compiling-a-kernel-module","title":"Part.3 Compiling a kernel module","index":"1.3"},{"id":"part.4-launching-a-kernel-module","title":"Part.4 Launching a kernel module","index":"1.4"},{"id":"part.5-modules:-miscellaneous-information","title":"Part.5 Modules: miscellaneous information","index":"1.5"},{"id":"part.6-memory-allocation","title":"Part.6 Memory allocation","index":"1.6"}]}],"reward":true,"copyright":{"author":"Oreo Du","link":"<a href=\"https://oreodu.github.io/2020/20201109-Device-Drivers/\" title=\"Device Drivers\">https://oreodu.github.io/2020/20201109-Device-Drivers/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}
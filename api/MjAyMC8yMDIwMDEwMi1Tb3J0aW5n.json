{"title":"Sorting","date":"2020-01-02T01:29:25.000Z","date_formatted":{"ll":"Jan 2, 2020","L":"01/02/2020","MM-DD":"01-02"},"link":"2020/20200102-Sorting","comments":true,"tags":["Classical Algorithms"],"categories":["Algorithms"],"updated":"2020-10-18T08:53:53.444Z","content":"<h1 id=\"sorting\">Sorting<a title=\"#sorting\" href=\"#sorting\"></a></h1>\n<h3 id=\"overview\">Overview<a title=\"#overview\" href=\"#overview\"></a></h3>\n<p>(概略图)</p>\n<p><strong>· materials:</strong><br>\n· <i>Algorithms</i>  by Dasgupta, C. H. Papadimitriou, U. V. Vazirani<br>\n· <i>Efficient Algorithms and Intractable Problems</i>  (CS170 2018 Fall at UCB)<br>\n· <i>Algorithm Design</i> by John Kleinberg, Eva Tardos<br>\n· <a href=\"https://sp19.datastructur.es/\" target=\"_blank\"><u>CS61B Spring 2019 at UCB</u></a><br>\n· <a href=\"https://www.coursera.org/learn/algorithms-part1\" target=\"_blank\"><u>Algorithms, Part I,Ⅱ by Princeton University</u></a><br>\n· Wikipedia</p>\n<div class=\"φcy\"><div class=\"φda\"><table><thead>\n<tr>\n<th>Name</th>\n<th>Comparisons</th>\n<th>Exchanges</th>\n<th>Stability</th>\n<th>Time complexity</th>\n<th>Space Complexity</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bubble Sort</td>\n<td>(n-1)+…+2+1 = n(n-1) / 2</td>\n<td>n(n-1) / 2</td>\n<td>Stable</td>\n<td>O(n^2)</td>\n<td>O(1)</td>\n</tr>\n<tr>\n<td>Selection Sort</td>\n<td>(n-1)+…+2+1 = n(n-1) / 2</td>\n<td>n -1</td>\n<td>No</td>\n<td>O(n^2)</td>\n<td>O(1)</td>\n</tr>\n<tr>\n<td>Insertion Sort</td>\n<td>1+2+…(n-1) = n(n-1) / 2</td>\n<td>n(n-1) / 2</td>\n<td>Stable</td>\n<td>O(n^2)</td>\n<td>O(1)</td>\n</tr>\n<tr>\n<td>Shell Sort</td>\n<td>depend on the increment sequence</td>\n<td>-</td>\n<td>No</td>\n<td>-</td>\n<td>O(1)</td>\n</tr>\n</tbody>\n</table></div></div><p>(Worst case)</p>\n<h2 id=\"part.1-elementary-sort\">Part.1 Elementary Sort<a title=\"#part.1-elementary-sort\" href=\"#part.1-elementary-sort\"></a></h2>\n<h3 id=\"ⅰ.--selection-sort-&amp;--bubble-sort\">Ⅰ.  Selection Sort &amp;  Bubble Sort<a title=\"#ⅰ.--selection-sort-&amp;--bubble-sort\" href=\"#ⅰ.--selection-sort-&amp;--bubble-sort\"></a></h3>\n<p>Unlike the basic sort method inserting elements into the sorted subarray, we can select the <code>i-th</code> largest element  and put the value into the <code>a[i]</code>. We can select the element from the front portion and put it in the back or  we can select the element from the back portion and put it in the front.</p>\n<p>There are two ways to select element. The first method is bubble sort. It operates by repeatedly swapping the adjacent elements if they are in the wrong order which result in that the <code>i-th</code> largest element is moved to <code>a[i]</code>.</p>\n<img src=\"https://i.loli.net/2020/10/17/DjUukWQXEGFqBln.png\" alt=\"22\" style=\"zoom:20%;\">\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = a.length;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; n-i-<span class=\"number\">1</span>; j++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[j] &gt; a[j+<span class=\"number\">1</span>]) exch(a, j, j+<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>The second method called selection sort. It sorts an array by repeatedly finding the index <code>min</code> of smallest remaining element from the unsorted part and swap <code>a[i]</code> and <code>a[min]</code>.</p>\n<img src=\"https://i.loli.net/2020/10/17/29Xv3rjCIUksJxD.jpg\" alt=\"22\" style=\"zoom:25%;\">\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = a.length;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> min;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">        min = i;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; n; j++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[j] &lt; a[min]) min = j;</span><br><span class=\"line\">        exch(a, i, min);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Selection sort is more efficient and faster than the bubble sort because of less exchanges.</p>\n<h3 id=\"ⅱ.--insertion-sort\">Ⅱ.  Insertion Sort<a title=\"#ⅱ.--insertion-sort\" href=\"#ⅱ.--insertion-sort\"></a></h3>\n<p>Find the proper position for <code>a[i]</code> in <code>0-th</code> ~  <code>(i-1)-th</code> sorted subarray by swapping <code>a[i]</code> with each larger element to its left.</p>\n<img src=\"https://i.loli.net/2020/10/17/WdkRHFXYelstmpq.png\" alt=\"11\" style=\"zoom: 20%;\">\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = a.length;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; N; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i; j &gt; <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[j] &lt; a[j-<span class=\"number\">1</span>]) exch(a, j, j-<span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;  </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"ⅲ.-shell-sort\">Ⅲ. Shell Sort<a title=\"#ⅲ.-shell-sort\" href=\"#ⅲ.-shell-sort\"></a></h3>\n<p>Shell Sort is mainly a variation of Insertion Sort. In insertion sort, we move elements only one position ahead. The idea of Shell Sort is to allow exchange of far items.</p>\n<p>In Shell Sort, we make the array h-sorted for a large value of h. We keep reducing the value of h until it becomes 1. An array is said to be h-sorted if all sub-lists of every <code>h-th</code> element is sorted.</p>\n<p>After the previous h-sort, the array is partially sorted so the insertion will be fast (a g-sorted array remains g-sorted after h-sorting. See  the proof below or <a href=\"https://cs.stackexchange.com/questions/47096/why-does-decreasing-the-gap-size-in-shell-sort-never-undo-previous-sorts\" target=\"_blank\">here</a>).</p>\n<img src=\"https://i.loli.net/2020/10/18/AzZPorRqkJcVM9p.jpg\" alt=\"11\" style=\"zoom: 30%;\">\n<p>Increment sequence that we can use:<br>\n<strong>Power of two minus one</strong>: 1,3,7,…<br>\n<strong>3x+1</strong>: 1,4,13,40,…<br>\n<strong>Sedgewick</strong>: 1,5,19,41,109,…</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] a)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n = a.length;</span><br><span class=\"line\">    <span class=\"comment\">// while (h &lt; n/3) h = h*3 + 1;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> h = n/<span class=\"number\">3</span>; h &gt;= <span class=\"number\">1</span>; h = h/<span class=\"number\">3</span> ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = h; i &lt; n ; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i; j &gt;= h &amp;&amp; a[j] &lt; a[j-h]; j -= h)</span><br><span class=\"line\">                exch(a,j,j-h);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"part.1-advanced-search\">Part.1 Advanced Search<a title=\"#part.1-advanced-search\" href=\"#part.1-advanced-search\"></a></h2>\n<h3 id=\"ⅰ.-quick-sort\">Ⅰ. Quick Sort<a title=\"#ⅰ.-quick-sort\" href=\"#ⅰ.-quick-sort\"></a></h3>\n<h3 id=\"ⅱ.-heap-sort\">Ⅱ. Heap Sort<a title=\"#ⅱ.-heap-sort\" href=\"#ⅱ.-heap-sort\"></a></h3>\n<h3 id=\"ⅲ.-marge-sort\">Ⅲ. Marge sort<a title=\"#ⅲ.-marge-sort\" href=\"#ⅲ.-marge-sort\"></a></h3>\n<h3 id=\"ⅳ.--bucket-sort\">Ⅳ.  Bucket sort<a title=\"#ⅳ.--bucket-sort\" href=\"#ⅳ.--bucket-sort\"></a></h3>\n<h3 id=\"ⅴ.-radix-sort\">Ⅴ. Radix sort<a title=\"#ⅴ.-radix-sort\" href=\"#ⅴ.-radix-sort\"></a></h3>\n<h2 id=\"part.3-sort-in-java\">Part.3 Sort in Java<a title=\"#part.3-sort-in-java\" href=\"#part.3-sort-in-java\"></a></h2>\n<p>If we want to sort any type of data,we can use interface to simplify the process.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Client</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">XXXSorter</span></span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        X[] x = &#123;x1,x2,x3&#125;;</span><br><span class=\"line\">        x.sort();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Comparable interface (Built in java)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Comparable</span>&lt;<span class=\"title\">Item</span>&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(Item i)</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Object Implementation</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">X</span> <span class=\"keyword\">implements</span> <span class=\"title\">Comparable</span>&lt;<span class=\"title\">X</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(X x)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//...</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"comment\">//...</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"comment\">//...</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Sort Implementaion</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">sort</span><span class=\"params\">(Comparable[] x)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> N = x.length();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i&lt;N; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = i; j&gt;<span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (x[j].compareTo(x[j-<span class=\"number\">1</span>])&lt;<span class=\"number\">0</span>) exch(x, j, j-<span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;  </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"part.4-applications\">Part.4 Applications<a title=\"#part.4-applications\" href=\"#part.4-applications\"></a></h2>\n<h3 id=\"ⅰ.-shuffle\">Ⅰ. Shuffle<a title=\"#ⅰ.-shuffle\" href=\"#ⅰ.-shuffle\"></a></h3>\n<p>Goal: rearrange array so that result is uniformly random permutation.</p>\n<ol>\n<li>Generate a random real number (uniformly at random) for each array entry and sort the array based on it.</li>\n<li>Knuth Shuffle: In iteration <code>i</code>, pick integer r between <code>0</code> and <code>i</code> uniformly at random and swap a[i] and a[r].</li>\n</ol>\n<h3 id=\"ⅱ.-convex-hull\">Ⅱ. Convex hull<a title=\"#ⅱ.-convex-hull\" href=\"#ⅱ.-convex-hull\"></a></h3>\n<p>Convex hull: a set of N points which is the smallest perimeter fence enclosing the points.<br>\nOutput: Sequence of vertices in counterclockwise order.</p>\n<img src=\"https://i.loli.net/2020/10/18/P5EMAqcuGdSRHU3.png\" alt=\"44\" style=\"zoom: 33%;\">\n<p>Geometric properties:</p>\n<img src=\"https://i.loli.net/2020/10/18/sGPg7WBV3NL4crA.png\" alt=\"33\" style=\"zoom: 40%;\">\n<ol>\n<li>Can traverse the convex hull by making only counterclockwise turns</li>\n<li>The vertices of convex hull appear in increasing order of polar angle with respect to point p with lowest y-coordinate.</li>\n</ol>\n<p>Graham scan:</p>\n<ol>\n<li>Choose point p with smallest y-coordinate.</li>\n<li>Sort points by polar angle with p.</li>\n<li>Consider points in order; discard unless it create a counterclockwise turn.</li>\n</ol>\n<p>Implement of determine whether it’s a counterclockwise turn:<br>\n$ 2 x Area(a,b,c) = (b_x - a_x)(c_y - a_y) - (b_y -  a_y)(c_x - a_x) $<br>\n(Based on: the area of a parallelogram is equal to the cross product of two vectors)<br>\n(v1: ($b_x - a_x$, $b_y -  a_y$), v2:($c_x - a_x$,$c_y - a_y$))</p>\n<img src=\"https://i.loli.net/2020/10/18/qlINrFnUkjJsEoc.png\" alt=\"67\" style=\"zoom:45%;\">\n<p>See more <a href=\"https://algs4.cs.princeton.edu/99hull/\" target=\"_blank\">here</a>.</p>\n<p>Application:</p>\n<ol>\n<li>Robot motion planning.<br>\nFind shortest path in the plane from s to t that avoids a polygonal obstacle.<br>\nShortest path is either straight line from s to t or it is one of two polygonal chains of convex hull.</li>\n<li>Farthest pair problem<br>\nGiven N points in the plane, find a pair of points with the largest Euclidean distance between them.<br>\nFarthest pair of points are extreme points on convex hull.</li>\n</ol>\n","prev":{"title":"Linear List","link":"2020/20200425-Linear-List"},"next":{"title":"Algorithm Basics","link":"2019/20191013-Algorithm-Basics"},"plink":"https://oreodu.github.io/2020/20200102-Sorting/","toc":[{"id":"sorting","title":"Sorting","index":"1","children":[{"id":"part.1-elementary-sort","title":"Part.1 Elementary Sort","index":"1.1"},{"id":"part.1-advanced-search","title":"Part.1 Advanced Search","index":"1.2"},{"id":"part.3-sort-in-java","title":"Part.3 Sort in Java","index":"1.3"},{"id":"part.4-applications","title":"Part.4 Applications","index":"1.4"}]}],"reward":true,"copyright":{"author":"Oreo Du","link":"<a href=\"https://oreodu.github.io/2020/20200102-Sorting/\" title=\"Sorting\">https://oreodu.github.io/2020/20200102-Sorting/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}
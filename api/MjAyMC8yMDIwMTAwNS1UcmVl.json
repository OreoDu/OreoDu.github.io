{"title":"Tree","date":"2020-10-05T00:50:00.000Z","date_formatted":{"ll":"Oct 5, 2020","L":"10/05/2020","MM-DD":"10-05"},"link":"2020/20201005-Tree","comments":true,"categories":["Data Structure"],"updated":"2020-10-05T00:53:25.268Z","content":"<h3 id=\"overview\">Overview<a title=\"#overview\" href=\"#overview\"></a></h3>\n<p>(概略图)</p>\n<p><strong>· materials:</strong><br>\n· Wikipedia</p>\n<p>Recursive Description: A tree has a root and a list of branchesEach branch is a treeA tree with zero branches is called a leaf.</p>\n<p>Relative Description: Each location in a tree is called a nodeEach node has a label valueOne node can be the parent/child of another.</p>\n<p><img src=\"https://i.loli.net/2020/09/13/fDJtsRH6xkdKNCG.png\" alt=\"11\" class=\"φcx\"></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Use the recursive description</span></span><br><span class=\"line\"><span class=\"comment\"># We can also use the class to define the tree and its related attributes and methods.</span></span><br><span class=\"line\"><span class=\"comment\"># Constructor</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">tree</span>(<span class=\"params\">label, branches=[]</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> branch <span class=\"keyword\">in</span> branches:</span><br><span class=\"line\">        <span class=\"keyword\">assert</span> is_tree(branch)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [label] + <span class=\"built_in\">list</span>(branches)</span><br><span class=\"line\"><span class=\"comment\"># Selectors</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">label</span>(<span class=\"params\">tree</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> tree[<span class=\"number\">0</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">branches</span>(<span class=\"params\">tree</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> tree[<span class=\"number\">1</span>:]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_tree</span>(<span class=\"params\">tree</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">type</span>(tree) != <span class=\"built_in\">list</span> <span class=\"keyword\">or</span> <span class=\"built_in\">len</span>(tree) &lt; <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> branch <span class=\"keyword\">in</span> branches(tree):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> is_tree(branch):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">is_leaf</span>(<span class=\"params\">tree</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">not</span> branches(tree)</span><br><span class=\"line\"></span><br><span class=\"line\">print(tree(<span class=\"number\">3</span>, [tree(<span class=\"number\">1</span>),tree(<span class=\"number\">2</span>, [tree(<span class=\"number\">1</span>),tree(<span class=\"number\">1</span>)])])) <span class=\"comment\"># [3, [1], [2, [1], [1]]]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Tree processing</span></span><br><span class=\"line\"><span class=\"comment\"># conut the nodes in a Tree</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">count_nodes</span>(<span class=\"params\">tree</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> is_leaf(tree): <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">    lst = [count_nodes(b) <span class=\"keyword\">for</span> b <span class=\"keyword\">in</span> branches(tree)]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">sum</span>(lst,<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># count the leaves</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">count_leaves</span>(<span class=\"params\">tree</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> is_leaf(tree): <span class=\"keyword\">return</span> [label(tree)]</span><br><span class=\"line\">    <span class=\"comment\"># leaves = [count_leaves(b) for b in branches(tree)] #[[1],[[1],[1]]]</span></span><br><span class=\"line\">    leaves = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> b <span class=\"keyword\">in</span> branches(tree):</span><br><span class=\"line\">        leaves += count_leaves(tree) <span class=\"comment\"># [1,1,1]</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> leaves</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print the tree</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">print_tree</span>(<span class=\"params\">tree,indent = <span class=\"number\">0</span></span>):</span></span><br><span class=\"line\">    print(<span class=\"string\">&#x27; &#x27;</span>*indent,label(tree))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> b <span class=\"keyword\">in</span> branches(tree):</span><br><span class=\"line\">            print_tree(b,indent+<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># create a tree from an exsisted tree</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">square_tree</span>(<span class=\"params\">tree</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> is_leaf(tree): <span class=\"keyword\">return</span> tree(label(tree)**<span class=\"number\">2</span>)</span><br><span class=\"line\">    lst = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> b <span class=\"keyword\">in</span> brannches(tree):</span><br><span class=\"line\">        lst += [suqare_tree(b)]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> tree(label(tree)**<span class=\"number\">2</span>,lst)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># prune the tree </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">prune</span>(<span class=\"params\">t,x</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> label(t) == x: <span class=\"keyword\">return</span> null</span><br><span class=\"line\">    branches(t) = [b <span class=\"keyword\">for</span> b <span class=\"keyword\">in</span> branches(t) <span class=\"keyword\">if</span> label(b) != x ]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> b <span class=\"keyword\">in</span> branchces():</span><br><span class=\"line\">        prune( b,x)</span><br></pre></td></tr></table></figure>\n<h3 id><a title=\"#\" href=\"#\"></a></h3>\n","prev":{"title":"Union Find","link":"2020/20201005-Union-Find"},"next":{"title":"Hash Table","link":"2020/20201005-Hash-Table"},"plink":"https://oreodu.github.io/2020/20201005-Tree/","reward":true,"copyright":{"author":"Oreo Du","link":"<a href=\"https://oreodu.github.io/2020/20201005-Tree/\" title=\"Tree\">https://oreodu.github.io/2020/20201005-Tree/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}
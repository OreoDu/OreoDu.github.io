{"title":"0031. 下一个排列","date":"2020-10-23T11:35:17.432Z","date_formatted":{"ll":"Oct 23, 2020","L":"10/23/2020","MM-DD":"10-23"},"updated":"2020-10-10T07:48:53.000Z","content":"<p><a href=\"leetcode/0031-en\">English</a>｜ 简体中文</p>\n<h2 id=\"题目描述\">题目描述<a title=\"#题目描述\" href=\"#题目描述\"></a></h2>\n<p>实现获取下一个排列的函数，算法需要将给定数字序列重新排列成字典序中下一个更大的排列。</p>\n<p>如果不存在下一个更大的排列，则将数字重新排列成最小的排列（即升序排列）。</p>\n<p>必须<a href=\"https://baike.baidu.com/item/%E5%8E%9F%E5%9C%B0%E7%AE%97%E6%B3%95\" target=\"_blank\">原地</a>修改，只允许使用额外常数空间。</p>\n<p>以下是一些例子，输入位于左侧列，其相应输出位于右侧列。</p>\n<p><code>1,2,3</code> → <code>1,3,2</code></p>\n<p><code>3,2,1</code> → <code>1,2,3</code></p>\n<p><code>1,1,5</code> → <code>1,5,1</code></p>\n<h2 id=\"题解\">题解<a title=\"#题解\" href=\"#题解\"></a></h2>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** 算法描述：</span></span><br><span class=\"line\"><span class=\"comment\"> *  1. 从后向前查找第一个相邻的升序元素对(i-1, i)，满足 nums[i-1] &lt; nums[i]，此时 [i, end) 必然是降序的；</span></span><br><span class=\"line\"><span class=\"comment\"> *  2. 在 [i, end) 范围内从后向前查找第一个满足 A[i-1] &lt; A[k] 的 k</span></span><br><span class=\"line\"><span class=\"comment\"> *  3. 交换 A[i-1] 和 A[k]</span></span><br><span class=\"line\"><span class=\"comment\"> *  4. 逆置 [i, end)，使其升序</span></span><br><span class=\"line\"><span class=\"comment\"> *  5. 如果步骤 1 中找不到符合的元素对(i-1, i)，说明[begin, end) 为降序，直接跳到步骤 4</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">nextPermutation</span><span class=\"params\">(<span class=\"number\">_</span> nums: <span class=\"keyword\">inout</span> [Int])</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> <span class=\"built_in\">count</span> = nums.<span class=\"built_in\">count</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">count</span> &lt; <span class=\"number\">2</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i : <span class=\"type\">Int</span> = <span class=\"built_in\">count</span> - <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> i &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> nums[i - <span class=\"number\">1</span>] &lt; nums[i] &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> j = <span class=\"built_in\">count</span> - <span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span> j &gt;= i &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> nums[i-<span class=\"number\">1</span>] &lt; nums[j] &#123;</span><br><span class=\"line\">                        <span class=\"built_in\">swap</span>(&amp;nums, i-<span class=\"number\">1</span>, j)</span><br><span class=\"line\">                        nums = nums[<span class=\"number\">0</span>...i-<span class=\"number\">1</span>] + nums[i...].reversed()</span><br><span class=\"line\">                        <span class=\"keyword\">return</span></span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    j -= <span class=\"number\">1</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            i -= <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> i == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">                nums.<span class=\"built_in\">reverse</span>()</span><br><span class=\"line\">                <span class=\"keyword\">return</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"number\">_</span> nums: <span class=\"keyword\">inout</span> [Int], <span class=\"number\">_</span> i: Int, <span class=\"number\">_</span> j: Int)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> temp = nums[i];</span><br><span class=\"line\">        nums[i] = nums[j];</span><br><span class=\"line\">        nums[j] = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","link":"leetcode/0031","comments":true,"plink":"https://oreodu.github.io/leetcode/0031/","toc":[{"id":"题目描述","title":"题目描述","index":"1"},{"id":"题解","title":"题解","index":"2"}],"reward":true,"copyright":{"author":"Oreo Du","link":"<a href=\"https://oreodu.github.io/leetcode/0031/\" title=\"0031. 下一个排列\">https://oreodu.github.io/leetcode/0031/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}
{"title":"Convolutional Neural Networks","date":"2020-06-25T15:36:00.000Z","thumbnail":"https://i.loli.net/2020/09/09/5oidcl2IVnwaL7g.jpg","slug":"20200625-Convolutional-Neural-Networks","comments":true,"tags":["Convolutional Neural Networks"],"categories":["Deep Learning"],"updated":"2020-09-09T09:13:39.400Z","content":"<h1 id=\"Convolutional-Neural-Networks-CNN\">Convolutional Neural Networks (CNN)<a href=\"post/20200625-Convolutional-Neural-Networks#Convolutional-Neural-Networks-CNN\"></a></h1><h3 id=\"Overview\">Overview<a href=\"post/20200625-Convolutional-Neural-Networks#Overview\"></a></h3><p>(概略图)</p>\n<p><strong>· materials:</strong></p>\n<p>  · Wikipedia</p>\n<p>  · <u><a href=\"https://towardsdatascience.com/a-comprehensive-guide-to-convolutional-neural-networks-the-eli5-way-3bd2b1164a53\" target=\"_blank\" rel=\"noopener\">Sources NO.1</a></u></p>\n<p>  · <u><a href=\"https://www.analyticsvidhya.com/blog/2020/02/mathematics-behind-convolutional-neural-network/?utm_source=blog&utm_medium=cnn-vs-rnn-vs-mlp-analyzing-3-types-of-neural-networks-in-deep-learning\" target=\"_blank\" rel=\"noopener\">Sources NO.2</a></u></p>\n<p>  · <u><a href=\"https://towardsdatascience.com/convolution-neural-networks-a-beginners-guide-implementing-a-mnist-hand-written-digit-8aa60330d022\" target=\"_blank\" rel=\"noopener\">Sources NO.3</a></u></p>\n<div class=\"article-img\"><p><img src=\"https://i.loli.net/2020/07/17/Ve2RsvIFM7WozLS.jpg\" alt=\"m\" data-zoomable></p></div>\n<p>A Convolutional Neural Network is a Deep Learning algorithm which can take in an input image, assign importance (learnable weights and biases) to various objects in the image and be able to differentiate one from the other. ConvNets have the ability to learn these characteristics.</p>\n<p>The architecture of a ConvNet is analogous to that of the connectivity pattern of Neurons in the Human Brain and was inspired by the organization of the Visual Cortex. Individual neurons respond to stimuli only in a restricted region of the visual field known as the Receptive Field. A collection of such fields overlap to cover the entire visual area.</p>\n<h2 id=\"Why-CNN\">Why CNN?<a href=\"post/20200625-Convolutional-Neural-Networks#Why-CNN\"></a></h2><p>A CNN, in specific, has one or more layers of convolution filters comparing to the multilayer perceptron. A convolution filter receives its input from multiple units from the previous layer which together create a proximity.</p>\n<p>The convolution layers (as well as pooling layers) are especially beneficial as:</p>\n<ul>\n<li><strong>·</strong>They uset the parameter sharing. A single filter is applied across different parts of an input to produce a feature map. So, they reduce the number of parameters in the network which reduces the chance of overfitting as the model would be less complex than a fully connected network (MLP).  Also, different filters can extract different kinds of features from an input.</li>\n<li><strong>·</strong> They consider the shared information (the spatial features) in the small neighborhoods. Filters in the ConNets are used to extract the relevant features from the input using the convolution operation.</li>\n<li><strong>·</strong> They learn the filters automatically without mentioning it explicitly. These filters help in extracting the right and relevant features from the input data.</li>\n</ul>\n<h2 id=\"Layers\">Layers<a href=\"post/20200625-Convolutional-Neural-Networks#Layers\"></a></h2><h3 id=\"Convolution-layer\">Convolution layer<a href=\"post/20200625-Convolutional-Neural-Networks#Convolution-layer\"></a></h3><div class=\"article-img\"><p><img src=\"https://i.loli.net/2020/07/17/gxehjuNRdkQEmM5.gif\" alt=\"k\" data-zoomable></p></div>\n<p>The convolution filters or kernels moves to the right with a certain Stride Value and  do the dot product till it parses the complete width. Moving on, it hops down to the beginning (left) of the image with the same Stride Value and repeats the process until the entire image is traversed.</p>\n<p>The objective of the Convolution Operation is to extract the high-level features such as edges, from the input image. Each filter can extract different features.</p>\n<h4 id=\"Pading\">Pading<a href=\"post/20200625-Convolutional-Neural-Networks#Pading\"></a></h4><p>Padding is a technique to simply add zeros around the margin of the image to increase it’s dimension. Padding allows us to emphasize the border pixels and in order lose less information.</p>\n<img src=\"https://i.loli.net/2020/07/17/btVT1sBFp9c8I5E.gif\" alt=\"pading\" style=\"zoom: 67%;\">\n\n<p>Same Padding: Dimensionality is remains the same.</p>\n<p>Valid Padding: Dimensionality is increased.</p>\n<p>Feature size = ((Image size + 2 * Padding size − Kernel size) / Stride)+1</p>\n<h3 id=\"Pooling-layer\">Pooling layer<a href=\"post/20200625-Convolutional-Neural-Networks#Pooling-layer\"></a></h3><p>Pooling layer helps reduce the spatial size of the convolved features and also helps reduce over-fitting by providing an abstracted representation of them. It is a sample-based discretization process. Furthermore, it is useful for extracting dominant features which are rotational and positional invariant, thus maintaining the process of effectively training of the model.</p>\n<div class=\"article-img\"><p><img src=\"https://i.loli.net/2020/07/17/heRa2M5WCoPvilI.gif\" alt=\"p\" data-zoomable></p></div>\n<p>The kernel take the max or average of the region from the input overlapped by the kernel. </p>\n<p>Max Pooling also performs as a Noise Suppressant. It discards the noisy activations altogether and also performs de-noising along with dimensionality reduction. On the other hand, Average Pooling simply performs dimensionality reduction as a noise suppressing mechanism. Hence, we can say that Max Pooling performs a lot better than Average Pooling.</p>\n<h3 id=\"Fully-connected-layer\">Fully connected layer<a href=\"post/20200625-Convolutional-Neural-Networks#Fully-connected-layer\"></a></h3><p>Adding a Fully-Connected layer is a cheap way of learning non-linear combinations of the high-level features as represented by the output of the convolutional layer.</p>\n<p>We flatten the image into a column vector. The flattened output is fed to a feed-forward neural network and backpropagation applied to every iteration of training. Over a series of epochs, the model is able to distinguish between dominating and certain low-level features in images and classify them using the Softmax Classification technique.</p>\n<img src=\"https://i.loli.net/2020/07/17/m6rhp5qJojD9PFN.jpg\" alt=\"f\" style=\"zoom: 67%;\">\n\n\n\n<p>Usually, activation function and dropout layer are used between two consecutive fully connected layers to introduce non-linearity and reduce over-fitting respectively. At the last fully connected layer we choose the output size based on our application. </p>\n<h3 id=\"Dropout-layer\">Dropout layer<a href=\"post/20200625-Convolutional-Neural-Networks#Dropout-layer\"></a></h3><p>Dropout is a regularization technique used to reduce over-fitting on neural networks. Usually, deep learning models use dropout on the fully connected layers, but is also possible to use dropout after the max-pooling layers, creating image noise augmentation.</p>\n<p>Dropout randomly zeroes some of the connections of the input tensor with probability p using samples from a Bernoulli distribution.</p>\n","prev":{"title":"Feature Engineering","slug":"20200716-Feature-Engineering"},"next":{"title":"Support Vector Machines","slug":"20200605-Support-Vector-Machines"},"link":"https://oreodu.github.io/post/20200625-Convolutional-Neural-Networks/","toc":[{"title":"Convolutional Neural Networks (CNN)","id":"Convolutional-Neural-Networks-CNN","index":"1","children":[{"title":"Why CNN?","id":"Why-CNN","index":"1.1"},{"title":"Layers","id":"Layers","index":"1.2"}]}],"reward":true,"copyright":{"author":"Oreo Du","link":"<a href=\"https://oreodu.github.io/post/20200625-Convolutional-Neural-Networks/\" title=\"Convolutional Neural Networks\">https://oreodu.github.io/post/20200625-Convolutional-Neural-Networks/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}